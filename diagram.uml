@startuml
!define PRIVATE -
!define PUBLIC +

class SciHlp {
    +root: tk.Tk
    +current_user: dict
    +data: dict
    +login_entry: tk.Entry
    +password_entry: tk.Entry
    +reg_login_entry: tk.Entry
    +reg_password_entry: tk.Entry
    +reg_confirm_entry: tk.Entry
    +reg_email_entry: tk.Entry
    +function_entry: tk.Entry
    +plot_frame: tk.Frame
    +canvas: FigureCanvasTkAgg
    +location_entry: tk.Entry
    +weather_data_frame: tk.Frame
    +task_entry: tk.Entry
    +tasks_listbox: tk.Listbox
    +email_var: tk.StringVar
    +password_var: tk.StringVar
    +notification_entry: tk.Entry
    
    +__init__()
    +initialize_data()
    +save_data()
    +show_login_screen()
    +show_register_screen()
    +login()
    +register()
    +show_main_screen()
    +setup_plot_tab(parent: ttk.Frame)
    +create_default_plot()
    +plot_function()
    +setup_weather_tab(parent: ttk.Frame)
    +fetch_weather()
    +setup_todo_tab(parent: ttk.Frame)
    +populate_tasks()
    +add_task()
    +mark_task_done()
    +remove_task()
    +setup_profile_tab(parent: ttk.Frame)
    +update_profile()
    +send_notification()
    +logout()
}

note top of SciHlp
**Główna klasa aplikacji SciHlp**
Data Analysis & Organization Tool

**Stałe:**
- DATA_FILE = "data.json"

**Struktura danych JSON:**
{
  "users": [
    {
      "login": string,
      "password": string,
      "email": string,
      "tasks": [string, ...]
    }
  ]
}
end note

package "Zewnętrzne biblioteki" {
    class tkinter <<external>>
    class matplotlib <<external>>
    class numpy <<external>>
    class json <<external>>
    class requests <<external>>
    class smtplib <<external>>
    class re <<external>>
    class datetime <<external>>
}

SciHlp ..> tkinter : uses
SciHlp ..> matplotlib : uses
SciHlp ..> numpy : uses
SciHlp ..> json : uses
SciHlp ..> requests : uses
SciHlp ..> smtplib : uses
SciHlp ..> re : uses
SciHlp ..> datetime : uses

note right of SciHlp::__init__
**Konstruktor:**
- Inicjalizuje główne okno aplikacji (900x600)
- Wywołuje initialize_data()
- Ustawia current_user na None
- Pokazuje ekran logowania
- Uruchamia mainloop()
end note

note right of SciHlp::initialize_data
**Inicjalizacja danych:**
- Sprawdza czy plik data.json istnieje
- Jeśli nie - tworzy domyślne dane z adminem
- Ładuje dane z pliku JSON
end note

note right of SciHlp::show_main_screen
**Główny ekran aplikacji:**
Tworzy notebook z 4 zakładkami:
1. Plot Function - wykres funkcji
2. Weather - pogoda
3. To-Do List - lista zadań
4. Profile - profil użytkownika
end note

note left of SciHlp::setup_plot_tab
**Zakładka wykresów:**
- Entry do wpisania funkcji
- Przycisk "Plot"
- Obszar na wykres matplotlib
- Domyślny wykres sin(x)
- Obsługa funkcji: sin, cos, tan, exp, log, sqrt
end note

note left of SciHlp::setup_weather_tab
**Zakładka pogody:**
- Entry do wpisania lokalizacji
- Przycisk "Fetch Weather"
- Obszar do wyświetlania danych pogodowych
- Symulowane dane pogodowe (API zakomentowane)
end note

note left of SciHlp::setup_todo_tab
**Zakładka zadań:**
- Entry do nowych zadań
- Przycisk "Add Task"
- Listbox z zadaniami + scrollbar
- Przyciski: "Mark as Done", "Remove Task"
- Zadania oznaczane jako [DONE]
end note

note left of SciHlp::setup_profile_tab
**Zakładka profilu:**
- Wyświetlanie/edycja: login, email, hasło
- Przycisk "Update Profile"
- Sekcja powiadomień email
- Przycisk "Send Notification"
- Przycisk "Logout"
end note
@enduml
